/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ObligationManager,
  ObligationManagerInterface,
} from "../ObligationManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_arbiter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "redundancy",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "retrievalSpeed",
        type: "uint256",
      },
    ],
    name: "ObligationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum ObligationManager.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ObligationUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "arbiter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redundancy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "retrievalSpeed",
        type: "uint256",
      },
    ],
    name: "createObligation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "obligations",
    outputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redundancy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "retrievalSpeed",
        type: "uint256",
      },
      {
        internalType: "enum ObligationManager.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "enum ObligationManager.Status",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "updateStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109cf3803806109cf83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61093c806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f36f2fe146100515780635361698214610080578063a95a7f3314610095578063fe25e00a146100a8575b600080fd5b61006461005f366004610553565b6100d3565b6040516100779796959493929190610618565b60405180910390f35b61009361008e36600461066c565b6101b0565b005b6100936100a33660046106c2565b6102f6565b6001546100bb906001600160a01b031681565b6040516001600160a01b039091168152602001610077565b80516020818301810180516000825292820191909301209152805481906100f990610738565b80601f016020809104026020016040519081016040528092919081815260200182805461012590610738565b80156101725780601f1061014757610100808354040283529160200191610172565b820191906000526020600020905b81548152906001019060200180831161015557829003601f168201915b5050506001840154600285015460038601546004870154600588015460069098015496976001600160a01b0390941696929550909350919060ff1687565b6001546001600160a01b031633146102065760405162461bcd60e51b815260206004820152601460248201527313db9b1e48185c989a5d195c88185b1b1bddd95960621b60448201526064015b60405180910390fd5b6000826040516102169190610772565b9081526020016040518091039020600201546000036102775760405162461bcd60e51b815260206004820152601960248201527f4f626c69676174696f6e20646f6573206e6f742065786973740000000000000060448201526064016101fd565b806000836040516102889190610772565b908152604051908190036020019020600601805460ff191660018360038111156102b4576102b46105e0565b02179055507fb4e55eaf3be8efc628751f8e2da94e16bf2ad26b805a461c4769958bd24b842c82826040516102ea92919061078e565b60405180910390a15050565b6000856040516103069190610772565b9081526020016040518091039020600201546000146103675760405162461bcd60e51b815260206004820152601960248201527f4f626c69676174696f6e20616c7265616479206578697374730000000000000060448201526064016101fd565b6040518060e00160405280868152602001856001600160a01b03168152602001428152602001848152602001838152602001828152602001600060038111156103b2576103b26105e0565b8152506000866040516103c59190610772565b908152604051908190036020019020815181906103e29082610806565b5060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836003811115610462576104626105e0565b02179055509050507fbc6b3b3fd53d42801c9505d99f6948b688ac6d7451ee4627a3722d4c0e57a42185858585856040516104a19594939291906108c6565b60405180910390a15050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104d757600080fd5b813567ffffffffffffffff808211156104f2576104f26104b0565b604051601f8301601f19908116603f0116810190828211818310171561051a5761051a6104b0565b8160405283815286602085880101111561053357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561056557600080fd5b813567ffffffffffffffff81111561057c57600080fd5b610588848285016104c6565b949350505050565b60005b838110156105ab578181015183820152602001610593565b50506000910152565b600081518084526105cc816020860160208601610590565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6004811061061457634e487b7160e01b600052602160045260246000fd5b9052565b60e08152600061062b60e083018a6105b4565b905060018060a01b03881660208301528660408301528560608301528460808301528360a083015261066060c08301846105f6565b98975050505050505050565b6000806040838503121561067f57600080fd5b823567ffffffffffffffff81111561069657600080fd5b6106a2858286016104c6565b9250506020830135600481106106b757600080fd5b809150509250929050565b600080600080600060a086880312156106da57600080fd5b853567ffffffffffffffff8111156106f157600080fd5b6106fd888289016104c6565b95505060208601356001600160a01b038116811461071a57600080fd5b94979496505050506040830135926060810135926080909101359150565b600181811c9082168061074c57607f821691505b60208210810361076c57634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610784818460208701610590565b9190910192915050565b6040815260006107a160408301856105b4565b90506107b060208301846105f6565b9392505050565b601f82111561080157600081815260208120601f850160051c810160208610156107de5750805b601f850160051c820191505b818110156107fd578281556001016107ea565b5050505b505050565b815167ffffffffffffffff811115610820576108206104b0565b6108348161082e8454610738565b846107b7565b602080601f83116001811461086957600084156108515750858301515b600019600386901b1c1916600185901b1785556107fd565b600085815260208120601f198616915b8281101561089857888601518255948401946001909101908401610879565b50858210156108b65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a0815260006108d960a08301886105b4565b6001600160a01b03969096166020830152506040810193909352606083019190915260809091015291905056fea2646970667358221220490bb72c09876d6c71ceb5b618f9eb3e5933f9191db8c81baf79623584b1352f64736f6c63430008140033";

type ObligationManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ObligationManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ObligationManager__factory extends ContractFactory {
  constructor(...args: ObligationManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _arbiter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_arbiter, overrides || {});
  }
  override deploy(
    _arbiter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_arbiter, overrides || {}) as Promise<
      ObligationManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ObligationManager__factory {
    return super.connect(runner) as ObligationManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ObligationManagerInterface {
    return new Interface(_abi) as ObligationManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ObligationManager {
    return new Contract(address, _abi, runner) as unknown as ObligationManager;
  }
}
