/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Arbiter, ArbiterInterface } from "../Arbiter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "obligationManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isFulfilled",
        type: "bool",
      },
    ],
    name: "verifyObligation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461008457601f6103b838819003918201601f19168301916001600160401b038311848410176100895780849260209460405283398101031261008457516001600160a01b0381168103610084576080523360a05260405161031890816100a0823960805181818161012f015261027b015260a051818181609a01526102340152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c908163558b220014610267575080638da5cb5b1461021f5763a648f2501461004557600080fd5b3461021b578060031936011261021b5781359067ffffffffffffffff8083116102175736602384011215610217578284013592818411610213576024933685828401011161020f578435801515810361020b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101da57848661012a6084601f968c9687966000146101d15760ff60015b828851978895602087019a6329b0b4c160e11b8c52828801528260648801520186860137888584860101521660448301528819988991011681010360648101845201826102aa565b5190827f00000000000000000000000000000000000000000000000000000000000000005af1913d156101ca573d9081116101b8576101736020855193601f84011601836102aa565b81528560203d92013e5b15610186578380f35b606492916020600d92519362461bcd60e51b85528401528201526c155c19185d194819985a5b1959609a1b6044820152fd5b634e487b7160e01b8752604186528487fd5b505061017d565b60ff60026100e2565b845162461bcd60e51b8152602081890152600c818801526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b8780fd5b8680fd5b8580fd5b8480fd5b8280fd5b838234610263578160031936011261026357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b8490346102635781600319360112610263577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff8211176102cc57604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bbab8cadf91402f8eb3bccf1b6292639ace3b2b21b77f67b425c1a242e39f75564736f6c63430008140033";

type ArbiterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbiterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arbiter__factory extends ContractFactory {
  constructor(...args: ArbiterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_manager, overrides || {});
  }
  override deploy(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_manager, overrides || {}) as Promise<
      Arbiter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Arbiter__factory {
    return super.connect(runner) as Arbiter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbiterInterface {
    return new Interface(_abi) as ArbiterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Arbiter {
    return new Contract(address, _abi, runner) as unknown as Arbiter;
  }
}
