/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ObligationManager,
  ObligationManagerInterface,
} from "../../Arbiter.sol/ObligationManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_arbiter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "ObligationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ObligationUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "arbiter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "createObligation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "obligations",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint40",
        name: "createdAt",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
    ],
    name: "updateStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000c9638038062000c9683398181016040528101906200003791906200014e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a090620001e1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000203565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011682620000e9565b9050919050565b620001288162000109565b81146200013457600080fd5b50565b60008151905062000148816200011d565b92915050565b600060208284031215620001675762000166620000e4565b5b6000620001778482850162000137565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420617262697465722061646472657373000000000000000000600082015250565b6000620001c960178362000180565b9150620001d68262000191565b602082019050919050565b60006020820190508181036000830152620001fc81620001ba565b9050919050565b608051610a70620002266000396000818161015901526104b40152610a706000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f36f2fe146100515780635361698214610083578063613b97ba1461009f578063fe25e00a146100bb575b600080fd5b61006b60048036038101906100669190610630565b6100d9565b60405161007a939291906106f6565b60405180910390f35b61009d600480360381019061009891906107b9565b610157565b005b6100b960048036038101906100b49190610819565b6102f2565b005b6100c36104b2565b6040516100d09190610866565b60405180910390f35b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900464ffffffffff16905083565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dc906108de565b60405180910390fd5b60008084846040516101f892919061092e565b908152602001604051809103902060000160159054906101000a900464ffffffffff1664ffffffffff1603610262576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025990610993565b60405180910390fd5b806000848460405161027592919061092e565b908152602001604051809103902060000160146101000a81548160ff021916908360ff16021790555082826040516102ae92919061092e565b60405180910390207fb4e55eaf3be8efc628751f8e2da94e16bf2ad26b805a461c4769958bd24b842c826040516102e591906109b3565b60405180910390a2505050565b600080838360405161030592919061092e565b908152602001604051809103902060000160159054906101000a900464ffffffffff1664ffffffffff161461036f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036690610a1a565b60405180910390fd5b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600060ff1681526020014264ffffffffff16815250600083836040516103bd92919061092e565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548164ffffffffff021916908364ffffffffff160217905550905050818160405161046f92919061092e565b60405180910390207f58bc9bb599f274bdb530d9e4db6e4c10bab228f42b8d304855d72655738a78b7336040516104a69190610866565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61053d826104f4565b810181811067ffffffffffffffff8211171561055c5761055b610505565b5b80604052505050565b600061056f6104d6565b905061057b8282610534565b919050565b600067ffffffffffffffff82111561059b5761059a610505565b5b6105a4826104f4565b9050602081019050919050565b82818337600083830152505050565b60006105d36105ce84610580565b610565565b9050828152602081018484840111156105ef576105ee6104ef565b5b6105fa8482856105b1565b509392505050565b600082601f830112610617576106166104ea565b5b81356106278482602086016105c0565b91505092915050565b600060208284031215610646576106456104e0565b5b600082013567ffffffffffffffff811115610664576106636104e5565b5b61067084828501610602565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106a482610679565b9050919050565b6106b481610699565b82525050565b600060ff82169050919050565b6106d0816106ba565b82525050565b600064ffffffffff82169050919050565b6106f0816106d6565b82525050565b600060608201905061070b60008301866106ab565b61071860208301856106c7565b61072560408301846106e7565b949350505050565b600080fd5b600080fd5b60008083601f84011261074d5761074c6104ea565b5b8235905067ffffffffffffffff81111561076a5761076961072d565b5b60208301915083600182028301111561078657610785610732565b5b9250929050565b610796816106ba565b81146107a157600080fd5b50565b6000813590506107b38161078d565b92915050565b6000806000604084860312156107d2576107d16104e0565b5b600084013567ffffffffffffffff8111156107f0576107ef6104e5565b5b6107fc86828701610737565b9350935050602061080f868287016107a4565b9150509250925092565b600080602083850312156108305761082f6104e0565b5b600083013567ffffffffffffffff81111561084e5761084d6104e5565b5b61085a85828601610737565b92509250509250929050565b600060208201905061087b60008301846106ab565b92915050565b600082825260208201905092915050565b7f4f6e6c7920617262697465720000000000000000000000000000000000000000600082015250565b60006108c8600c83610881565b91506108d382610892565b602082019050919050565b600060208201905081810360008301526108f7816108bb565b9050919050565b600081905092915050565b600061091583856108fe565b93506109228385846105b1565b82840190509392505050565b600061093b828486610909565b91508190509392505050565b7f4e6f6e6578697374656e74206f626c69676174696f6e00000000000000000000600082015250565b600061097d601683610881565b915061098882610947565b602082019050919050565b600060208201905081810360008301526109ac81610970565b9050919050565b60006020820190506109c860008301846106c7565b92915050565b7f4f626c69676174696f6e20657869737473000000000000000000000000000000600082015250565b6000610a04601183610881565b9150610a0f826109ce565b602082019050919050565b60006020820190508181036000830152610a33816109f7565b905091905056fea264697066735822122025f5f056ac4cf61afa9a79402a6c0def316be7a91cb58985729e05cbe7c0511b64736f6c63430008140033";

type ObligationManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ObligationManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ObligationManager__factory extends ContractFactory {
  constructor(...args: ObligationManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _arbiter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_arbiter, overrides || {});
  }
  override deploy(
    _arbiter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_arbiter, overrides || {}) as Promise<
      ObligationManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ObligationManager__factory {
    return super.connect(runner) as ObligationManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ObligationManagerInterface {
    return new Interface(_abi) as ObligationManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ObligationManager {
    return new Contract(address, _abi, runner) as unknown as ObligationManager;
  }
}
